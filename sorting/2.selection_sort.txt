1. we select the minimum value of the array and swap it with the first element of the array.
2. we select the minimum value of the remaining array and swap it with the second element of the array and so on. This is done till the array is sorted.
3. Best, Worst, Average Time Complexity: O(n^2), Space Complexity: O(1)
4. Inplace: Yes, Stable: No
5. Selection sort is not stable because it swaps elements irrespective of their order.

Code: -
#include <bits/stdc++.h>
using namespace std;
int main() {
    vector<int> arr={13,46,24,52,20,9};
    int n=arr.size();
    for(int i=0;i<n-1;i++){
	    int mini=INT_MAX,idx=-1;
	    for(int j=i;j<n;j++){
            if(mini>arr[j]){
                mini=arr[j];
                idx=j;
            }
	    }
	    swap(arr[idx],arr[i]);
    }
    for(auto it:arr) cout<<it<<" ";
    return 0;
}